<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1,shrink-to-fit=no">
    <meta name="theme-color" content="#000000">
    <link rel="manifest" href="/manifest.json">
    <link rel="shortcut icon" href="/favicon.ico">
    <title>Hello world app</title>
    <script>

        function baseWSProtocol() {
            return (<%= testing %>) ?"ws" : "wss";
        }

        function baseHTTPProtocol() {
            return (<%= testing %>) ?"http" : "https";
        }

        function baseURL() {
            if (<%= testing %>) {
                return "127.0.0.1:8090"
            }else {
                const paths = window.location.pathname.split("/");

                if (paths.length > 1) {
                    if (paths[paths.length - 2] != "") {
                        pathname = `/${paths[paths.length - 2]}`;
                    }
                }
                return `${window.location.host}${pathname}`
            }
        }

        function actuate() {
            var xhr = new XMLHttpRequest();

            console.log("calling", `${baseHTTPProtocol()}://${baseURL()}/ui/actuate`);

            xhr.open('GET', `${baseHTTPProtocol()}://${baseURL()}/ui/actuate`);
            xhr.onload = function () {
                if (xhr.status === 200) {
                    console.log(xhr.responseText);
                }
                else {
                    console.log(xhr.status);
                }
            };
            xhr.send();
        }

        window.addEventListener('load', function () {
            console.log("creating websocket", `${baseWSProtocol()}://${baseURL()}/ui/ws`)
            const socket = new WebSocket(`${baseWSProtocol()}://${baseURL()}/ui/ws`);

            socket.onopen = function () {
                console.log("successfully connected to server websocket")
            }

            socket.onclose = function () {
                console.log("socket closed");
                //if the ws is closed then refresh to reconect
                //this gives live ui reload ;-) in the dev image
                setTimeout(() => { window.location.reload(); }, 2000);
            }

            socket.onerror = function (err) {
                console.log("socket error!");
            }

            socket.onmessage = function (msg) {
                const message = document.createElement("div");
                message.innerHTML = msg.data;
                document.getElementById("messages").append(message);
                console.log("message", msg);
            }
        });
    </script>
    <style>
        body {
            font-size: 1.5em
        }

        button {
            font-size: .7em
        }
    </style>
</head>

<body>
    <h2>Hello world app written in node</h2>
    <button onclick="actuate()" href="#">click here to actuate</button>
    <div style="margin-top:20px">
        <div id="messages"></div>
    </div>
</body>



</html>